# Syntax reference:
# https://help.github.com/en/actions/automating-your-workflow-with-github-actions/workflow-syntax-for-github-actions

name: Tests

defaults:
  run:
    shell: bash

on:
  push:
    branches: [dev]
  pull_request:
    types: [opened, synchronize]

jobs:
  testing:
    runs-on: ubuntu-latest
    container:
      image: ${{ matrix.container }}
      # the default for ubuntu:18.04, but with the size increased from 65536k
      options: '--shm-size="1g"'
    strategy:
      matrix:
        container: ['ubuntu:16.04', 'ubuntu:18.04', 'ubuntu:20.04', 'debian:10-slim', 'fedora:32', 'centos:7', 'centos:8']
        cc: ['gcc', 'clang']
        buildtype: ['debug', 'release']
        include:
          # Add a single coverage configuration
          - container: 'ubuntu:18.04'
            cc: 'clang'
            buildtype: 'coverage'
    env:
      CC: ${{ matrix.cc }}
      CONTAINER: ${{ matrix.container }}
      BUILDTYPE: ${{ matrix.buildtype }}
        
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          . ci/container_scripts/install_deps.sh
          . ci/container_scripts/install_extra_deps.sh
          echo "::add-path::$HOME/.cargo/bin"

      - name: Build
        run: . ci/container_scripts/build_and_install.sh

      - name: Test
        run: . ci/container_scripts/test.sh

      - name: Generate coverage report
        if: ${{ matrix.buildtype == 'coverage' }}
        run: |
          cargo install grcov
          grcov ./build -s src/ -t lcov --llvm --branch --ignore-not-existing -o ./grcov.lcov.txt

      - name: Upload coverage report to codecov
        if: ${{ matrix.buildtype == 'coverage' }}
        uses: codecov/codecov-action@v1
        with:
          name: coverage 
          file: grcov.lcov.txt
          flags: tests
          fail_ci_if_error: true

      - name: Upload shadow data directories
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: shadow-data-dirs
          path: build/**/*.data/*

      - name: Upload shadow log file
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: shadow-log-file
          path: build/Testing/Temporary/*

# FIXME
#  shadow-plugin-tor-ci:
#    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        # TODO: add clang. Currently builds but has unsuccessful xfers in simulation.
#        cc: ['gcc']
#
#    env:
#      CC: ${{ matrix.cc }}
#
#    steps:
#      - name: Update packages
#        run: sudo apt-get update
#
#      - name: Checkout shadow
#        uses: actions/checkout@v2
#        with:
#          path: shadow
#
#      - name: Checkout tgen 
#        uses: actions/checkout@v2
#        with:
#          repository: shadow/tgen
#          ref: v0.0.1
#          path: tgen
#
#      - name: Checkout shadow-plugin-tor
#        uses: actions/checkout@v2
#        with:
#          repository: shadow/shadow-plugin-tor
#          ref: 391f85f26bcaf09dd6b9f06f7331b6b73b47db17
#          path: shadow-plugin-tor
#
#      - name: CI script
#        run: shadow-plugin-tor/tools/continuous_integration_test.sh
#
#      - name: Upload simulation logs
#        uses: actions/upload-artifact@v2
#        if: failure()
#        with:
#          name: simulation-output
#          path: simulation

