# Syntax reference:
# https://help.github.com/en/actions/automating-your-workflow-with-github-actions/workflow-syntax-for-github-actions

name: Tor Tests
permissions: read-all

defaults:
  run:
    shell: bash

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize]

env:
  CARGO_TERM_COLOR: always

jobs:
  tor:
    runs-on: ubuntu-latest

    container:
      image: ${{ matrix.container }}
      # the default shm-size for ubuntu:18.04, but with the size increased from
      # 65536k. github's default docker seccomp policy seems to disallow
      # process_vm_readv and process_vm_writev; disable it altogether. See
      # https://docs.docker.com/engine/security/seccomp/
      options: '--shm-size="1g" --security-opt seccomp=unconfined'

    strategy:
      matrix:
        container: ['ubuntu:20.04']
        # supported tor releases are here:
        # https://gitlab.torproject.org/legacy/trac/-/wikis/org/teams/NetworkTeam/CoreTorReleases
        # when changing the tor versions, make sure to also update the
        # required CI tests in the GitHub repository settings
        tor: ['tor-0.4.5.12', 'tor-0.4.6.10', 'tor-0.4.7.7']

    env:
      CC: 'clang'
      CONTAINER: ${{ matrix.container }}
      BUILDTYPE: 'release'
      RUSTPROFILE: minimal

    steps:
      - name: Checkout shadow
        uses: actions/checkout@v2
        with:
          path: shadow
          # Run on PR head instead of merge result. Running on the merge
          # result can give confusing results, and we require PR to be up to
          # date with target branch before merging, anyway.
          # See https://github.com/shadow/shadow/issues/2166
          ref: ${{ github.event.pull_request.head.sha }}
          persist-credentials: false

      - name: Checkout tor
        uses: actions/checkout@v2
        with:
          path: tor
          # this is not the official tor repo, but it's managed by the Tor Project
          # and allows us to simplify our CI script
          repository: torproject/tor
          ref: ${{ matrix.tor }}
          persist-credentials: false

      - name: Checkout tgen
        uses: actions/checkout@v2
        with:
          path: tgen
          repository: shadow/tgen
          ref: f28daefc20857c20e964aca6e970f69e2dce0edb
          persist-credentials: false

      - name: Get month
        id: get-month
        run: |
          echo "::set-output name=month::$(/bin/date -u "+%Y%m")"

      - name: Install dependencies
        run: |
          cd shadow
          . ci/container_scripts/install_deps.sh
          . ci/container_scripts/install_extra_deps.sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
          # dependencies for tor and tgen
          DEBIAN_FRONTEND=noninteractive apt-get install -y automake libevent-dev libssl-dev zlib1g-dev libigraph-dev
          mkdir -p ~/.local/bin

      - name: Restore cargo registry cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          # invalidate the cache once per month
          key: cargo-registry-${{ steps.get-month.outputs.month }}
          restore-keys: |
            cargo-registry-

      - name: Restore tor build cache
        id: restore-tor-build-cache
        uses: actions/cache@v2
        with:
          path: tor
          key: tor-build-${{ matrix.container }}-${{ matrix.tor }}

      - name: Configure tor
        if: steps.restore-tor-build-cache.outputs.cache-hit != 'true'
        run: |
          cd tor
          ./autogen.sh
          ./configure --disable-asciidoc --disable-unittests

      - name: Build tor
        run: |
          cd tor
          make -j$(nproc)
          ln -s $(pwd)/src/app/tor ~/.local/bin/tor

      - name: Build tgen
        run: |
          cd tgen
          mkdir build && cd build
          cmake ..
          make -j$(nproc)
          cd ..
          ln -s $(pwd)/build/src/tgen ~/.local/bin/tgen

      - name: Build shadow
        run: |
          cd shadow
          . ci/container_scripts/build_and_install.sh

      - name: Test
        run: |
          cd shadow
          ./setup test -- --build-config extra --label-regex tor

      - name: Last 200 log lines
        if: failure()
        run: |
          tail -n 200 shadow/build/Testing/Temporary/LastTest.log

      - name: Upload shadow data directory
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: shadow-data-dir
          path: shadow/build/src/test/tor/**/*.data/*

      - name: Upload shadow log file
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: shadow-log-file
          path: shadow/build/Testing/Temporary/LastTest.log
