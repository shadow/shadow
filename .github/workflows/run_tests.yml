# Syntax reference:
# https://help.github.com/en/actions/automating-your-workflow-with-github-actions/workflow-syntax-for-github-actions

name: Shadow Tests
permissions: read-all

defaults:
  run:
    shell: bash

on:
  pull_request:
    types: [opened, synchronize]

env:
  CARGO_TERM_COLOR: always

jobs:
  shadow:
    strategy:
      matrix:
        container:
          # End of standard support: April 2025 https://wiki.ubuntu.com/Releases
          - 'ubuntu:20.04'
          # End of standard support: April 2027 https://wiki.ubuntu.com/Releases
          - 'ubuntu:22.04'
          # EOL ~August 2024 https://wiki.debian.org/LTS
          - 'debian:10-slim'
          # EOL ~June 2026 https://wiki.debian.org/LTS
          - 'debian:11-slim'
          # EOL Dec 15 2023 https://endoflife.date/fedora
          - 'fedora:37'
        cc: ['gcc']
        buildtype: ['release']
        include:
          # Run some tests on the newest-available clang.  Testing clang on
          # *every* platform is a bit overkill, but testing on at least one
          # gives decent "bang for the buck" of testing compatibility with
          # clang's most recent diagnostics and optimizations.
          - container: 'ubuntu:22.04'
            cc: 'clang'
            buildtype: 'release'

          # Test a debug build for each compiler.
          - container: 'ubuntu:22.04'
            cc: 'gcc'
            buildtype: 'debug'
          - container: 'ubuntu:22.04'
            cc: 'clang'
            buildtype: 'debug'
    # Tests are all run in containers; just use the latest base image.
    runs-on: ubuntu-latest
    container:
      image: ${{ matrix.container }}
      # the default shm-size for ubuntu:18.04, but with the size increased from
      # 65536k. github's default docker seccomp policy seems to disallow
      # process_vm_readv and process_vm_writev; disable it altogether. See
      # https://docs.docker.com/engine/security/seccomp/
      options: '--shm-size=1024g --security-opt seccomp=unconfined'
    env:
      CC: ${{ matrix.cc }}
      CONTAINER: ${{ matrix.container }}
      BUILDTYPE: ${{ matrix.buildtype }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          # Run on PR head instead of merge result. Running on the merge
          # result can give confusing results, and we require PR to be up to
          # date with target branch before merging, anyway.
          # See https://github.com/shadow/shadow/issues/2166
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Get month
        id: get-month
        run: |
          echo "month=$(/bin/date -u "+%Y%m")" >> $GITHUB_OUTPUT

      - name: Install dependencies
        run: |
          . ci/container_scripts/install_deps.sh
          . ci/container_scripts/install_extra_deps.sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Restore cargo registry cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          # key *and* restore-keys include the month to force a monthly reset instead
          # of unbounded growth.
          key: cargo-registry-${{ steps.get-month.outputs.month }}-${{ hashFiles('src/Cargo.lock') }}
          restore-keys: |
            cargo-registry-${{ steps.get-month.outputs.month }}

      - name: Build
        run: . ci/container_scripts/build_and_install.sh

      - name: Test
        run: . ci/container_scripts/test.sh

      - name: Compress logs
        if: failure()
        run: |
          shopt -s globstar
          tar -cJf build/Testing/Temporary{.tar.xz,/}
          for f in build/**/*.data; do tar -cJf "$f.tar.xz" "$f/"; done

      - name: Upload shadow data directories
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: shadow-data-dirs
          path: build/**/*.data.tar.xz

      - name: Upload shadow log file
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: shadow-log-file
          path: build/Testing/Temporary.tar.xz
